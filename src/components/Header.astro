---
import { cn } from '../utils/cn';
import HeaderLink from './HeaderLink.astro';

const navigationItems = [
  { href: '/', label: 'Home' },
  { href: '/about', label: 'About' },
];
---

<header data-testid="main-layout-header">
  <nav
    data-testid="main-layout-header-nav"
    class={cn('flex items-center justify-between p-5', 'shadow-lg')}
  >
    <div class={cn('flex items-center gap-3')}>
      <button
        aria-expanded="false"
        aria-label="Open navigation menu"
        data-testid="main-layout-header-menu-button"
        id="mobile-menu-button"
        type="button"
        class={cn(
          'md:hidden flex',
          'h-8 w-8',
          'items-center justify-center',
          'rounded text-gray-700',
          'hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-300'
        )}
      >
        <img alt="" aria-hidden="true" src="/icons/hamburger-menu.svg" class={cn('h-6 w-6')} />
      </button>

      <a href="/">
        <img alt="Tamgobun" src="/images/tamagobun.png" class={cn('w-[80px] md:w-[100px]')} />
      </a>
    </div>

    <div class={cn('hidden md:flex', 'gap-5')}>
      {navigationItems.map((item) => <HeaderLink href={item.href}>{item.label}</HeaderLink>)}
    </div>
  </nav>

  <div
    aria-hidden="true"
    data-testid="main-layout-header-drawer"
    id="mobile-drawer"
    class={cn('fixed inset-0', 'hidden', 'z-50')}
  >
    <div
      id="drawer-backdrop"
      class={cn('fixed inset-0', 'bg-black opacity-50', 'transition-opacity')}
    >
    </div>

    <div
      id="drawer-content"
      class={cn(
        'fixed bottom-0 left-0 right-0',
        'h-[calc(100vh-64px)]',
        'transform translate-y-full',
        'rounded-t-lg bg-white shadow-xl',
        'transition-transform duration-300 ease-out'
      )}
    >
      <div class={cn('p-6')}>
        <div class={cn('flex justify-center', 'mb-4')}>
          <div class={cn('h-1 w-12', 'rounded-full bg-gray-300')}></div>
        </div>

        <nav class={cn('flex flex-col')}>
          {
            navigationItems.map((item) => (
              <a
                href={item.href}
                class={cn(
                  'block',
                  'p-2',
                  'rounded-lg text-lg font-medium text-gray-700',
                  'transition-colors',
                  'hover:bg-gray-50 hover:text-gray-900'
                )}
              >
                {item.label}
              </a>
            ))
          }
        </nav>
      </div>
    </div>
  </div>
</header>

<script>
  const drawerBackdrop = document.getElementById('drawer-backdrop');
  const drawerContent = document.getElementById('drawer-content');
  const mobileDrawer = document.getElementById('mobile-drawer');
  const mobileMenuButton = document.getElementById('mobile-menu-button');

  let isDrawerOpen = true;
  const drawerLinks = mobileDrawer?.querySelectorAll('a');

  function openDrawer() {
    isDrawerOpen = true;
    mobileDrawer?.classList.remove('hidden');
    mobileMenuButton?.setAttribute('aria-expanded', 'true');

    setTimeout(() => {
      drawerContent?.classList.remove('translate-y-full');
    }, 10);

    document.body.style.overflow = 'hidden';
  }

  function closeDrawer() {
    isDrawerOpen = false;
    drawerContent?.classList.add('translate-y-full');
    mobileMenuButton?.setAttribute('aria-expanded', 'false');

    setTimeout(() => {
      mobileDrawer?.classList.add('hidden');
    }, 300);

    document.body.style.overflow = '';
  }

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && isDrawerOpen) {
      closeDrawer();
    }
  });

  drawerBackdrop?.addEventListener('click', closeDrawer);
  mobileMenuButton?.addEventListener('click', () => {
    if (isDrawerOpen) {
      closeDrawer();
    } else {
      openDrawer();
    }
  });

  drawerLinks?.forEach((link) => {
    link.addEventListener('click', closeDrawer);
  });
</script>
